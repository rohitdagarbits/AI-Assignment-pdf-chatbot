[[["6188ce4b-3379-45ca-b5ea-4c68509e0c45",{"pageContent":"WILP IR Assignment (50)\nPrajna Upadhyay\nOctober 2023\n1  Problem Statement and Datasets\nIn this assignment,  you will implement\nVector Based Models\nto rank aca-\ndemic research papers.  Refer to the code and dataset that can be downloaded\nfrom  the  zip  file  here.   The  code  is  written  and  tested  in\nPython 3.10\n.   The\ndataset consists of 8K research papers (or documents) and 100 queries down-\nloaded from Semantic Scholar\n1\n.  The zip file consists of:\n1.\nmain.py\nfile\n2.\nrequirements.txt\nfile\n3.\nREADME.md\n4.\ns2\nfolder with:\n(a)\ns2/s2\ndoc.json\n:  All (8K) research papers in the corpus.  Each re-\nsearch paper has 3 fields.\ni.\ndocno\n:  A unique document id for each research paper\nii.\ntitle\n:  Title of the research paper\niii.\npaperAbstract\n:  Abstract of the research paper\nA single paper entry looks like:\n{\n\"docno\": \"6e4eddf4d6671c37537bb5d1c9623353b62e8531\",\n\"title\": [\n\"Duality Theorems for Finite Structures (\nCharacterising Gaps and Good Characterisations)\"\n],\n\"paperAbstract\": [","metadata":{"source":"WILP_IR_Assignment.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.5","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"","Author":"","Subject":"","Keywords":"","Creator":"LaTeX with hyperref","Producer":"pdfTeX-1.40.25","CreationDate":"D:20231103120505Z","ModDate":"D:20231103120505Z","Trapped":{"name":"False"}},"metadata":null,"totalPages":5},"loc":{"pageNumber":1,"lines":{"from":1,"to":48}}}}],["3d15ac4c-0bce-49ec-aa77-b779f65788ef",{"pageContent":"{\n\"docno\": \"6e4eddf4d6671c37537bb5d1c9623353b62e8531\",\n\"title\": [\n\"Duality Theorems for Finite Structures (\nCharacterising Gaps and Good Characterisations)\"\n],\n\"paperAbstract\": [\n\"We provide a correspondence between the subjects of\nduality and density in classes of finite\nrelational structures. ......\"\n]\n}\n1\nhttps://www.semanticscholar.org/\n1","metadata":{"source":"WILP_IR_Assignment.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.5","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"","Author":"","Subject":"","Keywords":"","Creator":"LaTeX with hyperref","Producer":"pdfTeX-1.40.25","CreationDate":"D:20231103120505Z","ModDate":"D:20231103120505Z","Trapped":{"name":"False"}},"metadata":null,"totalPages":5},"loc":{"pageNumber":1,"lines":{"from":48,"to":62}}}}],["98bd12d5-f135-45f1-8991-f83308e13b83",{"pageContent":"(b)\ns2/s2\nquery.json\n:  All the 100 queries.  Each query has 2 fields:\ni.\nqid\n:  The unique id of the query\nii.\nquery\n:  The text of the query\nSome query entries from the file are:\n{\n\"qid\": \"1\",\n\"query\": \"deep learning\"\n},\n{\n\"qid\": \"2\",\n\"query\": \"artificial intelligence\"\n},\n{\n\"qid\": \"3\",\n\"query\": \"information retrieval\"\n},\n.\n.\n.\n(c)\ns2/s2.qrel\n:  The relevance values of research papers for each query\nis given in this file.  The columns are:\ni.\nqid\n:  id of the query for which the relevance value is marked\nii.\ndocno\n: document id of the research paper for which the relevance\nis marked\niii.\nrelevance\n:  Relevance of the research paper\ndocno\nfor the query\nqid\n.  It can take values between ‘4‘ (most relevant) to ‘0‘ (least\nrelevant) with ‘3’, ‘2’, and ‘1’ in between.  Few entries from the\ndataset are:\n1 227759bc318163b2f2490690b828263f3f020cfb 2\n1 373f76633cc1f6c7a421e31c989842021a52fca4 4\n1 72d32c986b47d6b880dad0c3f155fe23d2939038 3\n1 39f63dbdce9207b87878290c0e3983e84cfcecd9 1","metadata":{"source":"WILP_IR_Assignment.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.5","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"","Author":"","Subject":"","Keywords":"","Creator":"LaTeX with hyperref","Producer":"pdfTeX-1.40.25","CreationDate":"D:20231103120505Z","ModDate":"D:20231103120505Z","Trapped":{"name":"False"}},"metadata":null,"totalPages":5},"loc":{"pageNumber":2,"lines":{"from":1,"to":50}}}}],["83557d66-6e46-46c6-91b1-453352eddd63",{"pageContent":"dataset are:\n1 227759bc318163b2f2490690b828263f3f020cfb 2\n1 373f76633cc1f6c7a421e31c989842021a52fca4 4\n1 72d32c986b47d6b880dad0c3f155fe23d2939038 3\n1 39f63dbdce9207b87878290c0e3983e84cfcecd9 1\n1 5ca4abab527f6b0270e50548f0dea30638c9b86e 0\n.\n.\n.\n2","metadata":{"source":"WILP_IR_Assignment.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.5","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"","Author":"","Subject":"","Keywords":"","Creator":"LaTeX with hyperref","Producer":"pdfTeX-1.40.25","CreationDate":"D:20231103120505Z","ModDate":"D:20231103120505Z","Trapped":{"name":"False"}},"metadata":null,"totalPages":5},"loc":{"pageNumber":2,"lines":{"from":50,"to":59}}}}],["7c4409dd-d528-48ac-8067-d773dd40320d",{"pageContent":"2  Prerequisites (Steps to be followed before start-\ning to code)\n1.  Download the zip file.\n2.  The code has been tested with\nPython 3.10\n, so to ensure that you do not\nrun  into  any  problems  related  to  versions,  install  and  use\nPython 3.10\nfor subsequent steps.\n3.  The top of the directory contains\nmain.py\nand\nrequirements.txt\n.  Run\nthe following command to first install all dependencies from there:\npip install -r requirements.txt\n4.  Run\npython main.py\n.  If everything goes well, you will see the following\noutput:\nThis means your indexes were successfully created.\n5.  Navigate to\ns2/intermediate/\nfolder where the indexes are stored.\ns2/intermediate/postings.tsv\nis the inverted index file.  This postings\ncan be read in memory and used to construct vector representations.\n3  What functions should I implement?\nYou will find an incomplete function named\nrank\nand\nevaluate()\nalready de-\nfined in\nmain.py\n.  It is called from the\nmain\nfunction.  Complete this function to","metadata":{"source":"WILP_IR_Assignment.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.5","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"","Author":"","Subject":"","Keywords":"","Creator":"LaTeX with hyperref","Producer":"pdfTeX-1.40.25","CreationDate":"D:20231103120505Z","ModDate":"D:20231103120505Z","Trapped":{"name":"False"}},"metadata":null,"totalPages":5},"loc":{"pageNumber":3,"lines":{"from":1,"to":38}}}}],["20a4542c-6401-432f-948b-c43f5ed80747",{"pageContent":"3  What functions should I implement?\nYou will find an incomplete function named\nrank\nand\nevaluate()\nalready de-\nfined in\nmain.py\n.  It is called from the\nmain\nfunction.  Complete this function to\nimplement ranking of documents using vector based models and their evaluation\nfor each query.  Feel free to add functions or libraries of your choice.  The high\nlevel steps for ranking and evaluation are:\n1.  Compute score for each document and query mentioned in\ns2/s2.qrel\n.\nImplement the score computation for these 4 vector-based notations:\n•\nnnn.nnn\n,\n•\nlnn.nnn\n,\n•\nntc.nnn\n,\n•\nltc.nnn\nYou can concatenate the paper title and abstract to construct vector repre-\nsentations for each document.  Feel free to remove stop-words and lemma-\ntization of terms according to the need.\n2.  Rank  the  documents  per  query  in  decreasing  order  of  scores.   Compute\ntime taken to rank the document per query.\n3","metadata":{"source":"WILP_IR_Assignment.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.5","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"","Author":"","Subject":"","Keywords":"","Creator":"LaTeX with hyperref","Producer":"pdfTeX-1.40.25","CreationDate":"D:20231103120505Z","ModDate":"D:20231103120505Z","Trapped":{"name":"False"}},"metadata":null,"totalPages":5},"loc":{"pageNumber":3,"lines":{"from":38,"to":72}}}}],["9950b476-b8e6-4925-90f1-c8441f2f8fb1",{"pageContent":"3.  Compute NDGC values for ranking obtained per query per notation.  The\nperfect ranking for each query can be obtained from\ns2/s2.qrel\nfile.\n4.  Report average NDCG score over the set of 100 queries for each notation.\n5.  Compare these NDCG scores and time taken for ranking for Vector Based\nRetrieval you implemented with NDCG scores and time taken for Boolean\nretrieval.  Use the function already defined\nand\nquery()\nto rank the doc-\numents for boolean model.  Assume the boolean retrieval assigns a score\nof ‘4’ (highest) to every document retrieved.\nHowever, do not delete any of the existing functions which may lead to your\ncode not running successfully.\n4  What should I submit?\nFiles to be submitted.\n1.  A zip file with only code, no indexes\n2.  A report.pdf:  Document your findings in the report.  You should analyze\nhow each of the 4 vector based notations work on the dataset, why they\ngive  good/bad  results,  etc,  how  much  time  they  take  for  ranking  each","metadata":{"source":"WILP_IR_Assignment.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.5","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"","Author":"","Subject":"","Keywords":"","Creator":"LaTeX with hyperref","Producer":"pdfTeX-1.40.25","CreationDate":"D:20231103120505Z","ModDate":"D:20231103120505Z","Trapped":{"name":"False"}},"metadata":null,"totalPages":5},"loc":{"pageNumber":4,"lines":{"from":1,"to":21}}}}],["c7399a50-1838-4498-8c05-dcea1a273425",{"pageContent":"how each of the 4 vector based notations work on the dataset, why they\ngive  good/bad  results,  etc,  how  much  time  they  take  for  ranking  each\nquery, and how do they compare to boolean retrieval models.\nChecklist for zip file.\n1.\nmain.py\n:  This  is  the  python  code  that  contains  your  implementation.\nEvery\nmain.py\nsubmission file should call 2 functions in its\nmain\nfunction:\nindex(\"s2/\")\nrank_and_evaluate(\"s2/\", \"s2/s2_query.json\", \"s2/s2.qrel\")\n2.\nrequirements.txt\n:  You may include extra libraries for implementation.\nTo be able to run your submission, we have to install those libraries too.\nSo,  all  your  dependencies  should  be  written  to  a  ‘requirements.txt’  file\nand  submitted.   To  create  your  requirements.txt  file,  run  the  following\ncommand after you have finished implemention:\npip freeze > requirements.txt\n5  Grading Principles\nWe will use a script to run everyone’s\nmain.py\nusing\nPython 3.10\n.  Scores will\nbe awarded based on:\n4","metadata":{"source":"WILP_IR_Assignment.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.5","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"","Author":"","Subject":"","Keywords":"","Creator":"LaTeX with hyperref","Producer":"pdfTeX-1.40.25","CreationDate":"D:20231103120505Z","ModDate":"D:20231103120505Z","Trapped":{"name":"False"}},"metadata":null,"totalPages":5},"loc":{"pageNumber":4,"lines":{"from":21,"to":50}}}}],["f69f2bbf-84fc-486b-9f56-2ad6590098dc",{"pageContent":"1.  Whether  or  not  all  files  are  included  in  the  submission  (30%  penalty  is\nany of the files are missing)\n2.  Whether or not your code runs without any error (10% penalty if code\nruns into error)\n3.  If  your  code  is  found  to  be  plagiarized,  a  penalty  proportional  to  your\nplagiarism percentage will be imposed\n4.  Whether all 4 notations are implemented and whether comparison with\nboolean model is made (5\n×\n4 = 20)\n5.  Report structure and content (30).  Required sections in the report are:\n(a)  Introduction to the Problem (2.5)\n(b)  Vector Space Model description (2.5)\n(c)  Experiments you did with Vector Space Model and Boolean Model\n(10)\n(d)  Results  obtained  and  Discussion,  Comparison  with  Boolean  Model\n(12.5)\n(e)  Conclusion (2.5)\n6.  Bonus (20%) for improving the ranking using any other technique(s) that\nhas been discussed apart from the 4 notations already asked for in this\nassignment.\n5","metadata":{"source":"WILP_IR_Assignment.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.5","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"","Author":"","Subject":"","Keywords":"","Creator":"LaTeX with hyperref","Producer":"pdfTeX-1.40.25","CreationDate":"D:20231103120505Z","ModDate":"D:20231103120505Z","Trapped":{"name":"False"}},"metadata":null,"totalPages":5},"loc":{"pageNumber":5,"lines":{"from":1,"to":22}}}}]],{"0":"6188ce4b-3379-45ca-b5ea-4c68509e0c45","1":"3d15ac4c-0bce-49ec-aa77-b779f65788ef","2":"98bd12d5-f135-45f1-8991-f83308e13b83","3":"83557d66-6e46-46c6-91b1-453352eddd63","4":"7c4409dd-d528-48ac-8067-d773dd40320d","5":"20a4542c-6401-432f-948b-c43f5ed80747","6":"9950b476-b8e6-4925-90f1-c8441f2f8fb1","7":"c7399a50-1838-4498-8c05-dcea1a273425","8":"f69f2bbf-84fc-486b-9f56-2ad6590098dc"}]